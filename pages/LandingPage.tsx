import React, { useState } from 'react';
import { BrainCircuitIcon } from '../components/icons';
import { AboutModal } from '../components/AboutModal';

interface LandingPageProps {
  onStart: () => void;
  onLogin: () => void;
  onAdmin: () => void;
}

const LandingPage: React.FC<LandingPageProps> = ({ onStart, onLogin, onAdmin }) => {
  const [isAboutModalOpen, setAboutModalOpen] = useState(false);

  return (
    <>
    <div className="min-h-screen flex flex-col items-center justify-center text-center p-4 bg-slate-900 relative overflow-hidden">
      
      <div className="absolute top-0 left-0 -translate-x-1/3 -translate-y-1/3 w-[40vw] h-[40vw] max-w-[600px] max-h-[600px] bg-teal-500/10 rounded-full blur-3xl"></div>
      <div className="absolute bottom-0 right-0 translate-x-1/3 translate-y-1/3 w-[40vw] h-[40vw] max-w-[600px] max-h-[600px] bg-blue-500/10 rounded-full blur-3xl"></div>

      <nav className="absolute top-0 right-0 p-4 sm:p-6">
        <button onClick={onLogin} className="bg-slate-800/50 text-white font-bold py-2 px-5 sm:px-6 rounded-full hover:bg-slate-700/70 transition backdrop-blur-sm text-sm sm:text-base">
          ุชุณุฌูู ุงูุฏุฎูู
        </button>
      </nav>

      <div className="relative z-10">
        <header className="mb-8">
          <div className="inline-flex items-center justify-center gap-3 sm:gap-4 mb-4">
            <BrainCircuitIcon className="w-12 h-12 sm:w-16 sm:h-16 text-teal-400" />
            <h1 className="text-5xl sm:text-6xl md:text-7xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-teal-300 to-blue-500">
              ุฏูุชูุฑ ุจุฒูุณ
            </h1>
          </div>
          <p className="max-w-2xl mx-auto text-base sm:text-lg md:text-xl text-slate-400">
            ููุตุชู ุงููุชูุงููุฉ ูุชุญููู ุฃููุงุฑู ุฅูู ุงุณุชุฑุงุชูุฌูุงุช ุชุณููู ููุฑูุณูุฉ ููุญุชูู ุฅุจุฏุงุนูุ ูู ุฐูู ุจููุฉ ุงูุฐูุงุก ุงูุงุตุทูุงุนู.
          </p>
        </header>
        
        <main className="mb-12">
          <button
            onClick={onStart}
            className="bg-gradient-to-r from-teal-500 to-blue-600 text-white font-bold py-3 px-8 sm:py-4 sm:px-10 rounded-full hover:from-teal-600 hover:to-blue-700 focus:outline-none focus:ring-4 focus:ring-offset-2 focus:ring-offset-slate-900 focus:ring-teal-400 transition-all duration-300 transform hover:scale-105 text-base sm:text-lg shadow-2xl shadow-teal-500/20"
          >
            ๐ ุงุจุฏุฃ ุงุณุชุดุงุฑุชู ุงูุชุณููููุฉ ุงููุฌุงููุฉ
          </button>
        </main>
      </div>

      <section id="about" className="relative z-10 w-full max-w-4xl p-6 sm:p-8 bg-slate-800/50 rounded-2xl border border-slate-700 backdrop-blur-sm">
          <h2 className="text-2xl sm:text-3xl font-bold text-center mb-4 text-white">ูู ูู ุฏูุชูุฑ ุจุฒูุณุ</h2>
          <p className="text-center text-slate-300 leading-relaxed text-sm sm:text-base">
            ุฏูุชูุฑ ุจุฒูุณ ูุด ูุฌุฑุฏ ุฃุฏุงุฉุ ุฏู ุดุฑููู ุงูุงุณุชุฑุงุชูุฌู ุงูุฐูู. ุฅุญูุง ุจูุฌูุน ุจูู ููุฉ ููุงุฐุฌ ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงููุชูุฏูุฉ ูููู ุนููู ููุณูู ุงูุนุฑุจู ุนุดุงู ููุฏููู "ุฑูุดุชุงุช" ุชุณููููุฉ ูุฎุตูุตุฉุ ูุนุงูุฉุ ููุจุชูุฑุฉ. ูู ุชุญููู ููุฑุฉ ูุดุฑูุนู ูุบุงูุฉ ุฅูุดุงุก ูุญุชูู ุฌุงูุฒ ูููุดุฑ ูุชุตูููุงุช ุฌุฐุงุจุฉุ ุฅุญูุง ูุนุงู ูู ูู ุฎุทูุฉ ูู ุฑุญูุชู ูููุฌุงุญ ุงูุฑููู.
          </p>
      </section>

      <footer className="relative z-10 text-slate-500 text-xs sm:text-sm mt-12">
        <div className="flex gap-4">
          <button onClick={() => setAboutModalOpen(true)} className="hover:text-teal-400 transition">ููู ุฅุญูุง</button>
          <span>|</span>
          <button onClick={onAdmin} className="hover:text-teal-400 transition">ููุญุฉ ุชุญูู ุงููุฏูุฑ</button>
        </div>
        <p className="mt-2">ุชู ุงูุชุทููุฑ ุจูุงุณุทุฉ ุงูุฐูุงุก ุงูุงุตุทูุงุนู | ุฏูุชูุฑ ุจุฒูุณ &copy; 2024</p>
      </footer>
    </div>
    <AboutModal isOpen={isAboutModalOpen} onClose={() => setAboutModalOpen(false)} />
    </>
  );
};

export default LandingPage;